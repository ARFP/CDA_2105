// <auto-generated />
using AppBank.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppBank.DataAccessLayer.Migrations
{
    [DbContext(typeof(AppBankDbContext))]
    [Migration("20220124153600_addAgencies")]
    partial class addAgencies
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppBank.DomainModel.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NbCustomers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("banks");
                });

            modelBuilder.Entity("AppBank.DomainModel.BankAgency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AgencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bankId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("bankId");

                    b.ToTable("banks_agencies");
                });

            modelBuilder.Entity("AppBank.DomainModel.BankAgency", b =>
                {
                    b.HasOne("AppBank.DomainModel.Bank", "bank")
                        .WithMany("BankAgencies")
                        .HasForeignKey("bankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bank");
                });

            modelBuilder.Entity("AppBank.DomainModel.Bank", b =>
                {
                    b.Navigation("BankAgencies");
                });
#pragma warning restore 612, 618
        }
    }
}
